優先度付きto-do
  rgb を　lab に変換
  rgb -> xyz -> lab
  lab -> xyz -> rgb

  lは    0 ~ 100
  aは -128 ~ 127
  bは -128 ~ 127

  check_around()が本当に正しく
  ...考えられたものを実装しているかの確認
  高速化

  floatのほうがdoubleより良い？

  init をいくつか指定できると良い。
    - とりあえず中心立方体は指定したい。

  めちゃめちゃ見づらい。やばい。


  エディタモードを作成する。
  これは枠が白から緑にする
  他のボクセルを


やりたいこと
  ブロックとブロックとの境界をわかりやすくする
  きれいな画像にする。
  面白い初期値を指定する。
  bitmap画像とかを読み込む
  3dをどうやって見やすくするか。
  きれいにパーティクルを表示することが必要か？

  光を当てれば普通にきれいには見えるようになるけど、、、
  計算時間がヤバそう。

  サイズを大きく取りたいのに、時間がやばい

  ポリゴン付け足しができると嬉しい。

  カメラワーク

  生成のサイズとか死滅の仕方を管理できると
  (ワンホットか0~1の実数値か);


  視覚効果

  とりあえず高速化しないことには話にならない。
  GPU使って動かす？

  外枠の立方体の線画を書く








OK List

  背景にグリッドを作成する。
  ちゃんとライフゲームで挙動するようにする。

  透過機能をつけた
    (処理時間がやばい？)

  あと、
    一旦停止ボタン
    再生
    リセット
  をつけた




実装のあれ

  https://softologyblog.wordpress.com/tag/3d-cellular-automata/
  この人はムーア近傍をとった(立方体の自分以外の26個)


  n状態ライフゲームを処理する。
  これは以下のフローに従う。
  閾値をlimとする。
  http://www.page.sannet.ne.jp/kugai/documents/lifegame/presentation.pdf

  1. もし周りにlim以上の状態の個数==birth配列の要素にある、かつ、
    自分の状態が0なら、そのセルは状態n-1になる(誕生する)。
  //2. もし周りにlim以上の状態の個数==death配列の要素にあるなら、
  これは上の人と違うので、解釈を変える
  2'. もし周りの状態が
    「lim以上の状態」(ここ怪しい)の個数==survive配列の要素にある、
    かつ、自分の状態が0でないならば、状態を1下げる(老化)

  
  　もしかしたら、  自分と同じ状態のセルがsurvive個ある　or
                  自分とより1少ないセルがsurvive個ある？ 